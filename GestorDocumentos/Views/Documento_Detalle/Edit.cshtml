@model GestorDocumentos.Models.Documento_Detalle

@{
    ViewBag.Title = "Editar";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Edit", "Documento_Detalle", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Edición de Documento</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    @*<div class="form-group">
            @Html.LabelFor(model => model.llaveUnica, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.llaveUnica, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.llaveUnica, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @Html.EditorFor(model => model.llaveUnica, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })
    @Html.EditorFor(model => model.FechaRegistro, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })

    <div class="form-group">
        @Html.LabelFor(model => model.AreaId, "Área", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.AreaId, new SelectList(ViewBag.AreaId, "value", "Text"), new { @class = "form-control" })
            @*@Html.DropDownList("AreaId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AreaId, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CarpetaEncabezadoid, "Carpeta", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CarpetaEncabezadoid", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CarpetaEncabezadoid, "", new { @class = "text-danger" })
        </div>
    </div>
    <div id="dynamicfields">

    </div>
    @*<div class="form-group">
            @Html.LabelFor(model => model.Nombre_Ori, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre_Ori, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre_Ori, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre_Des, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre_Des, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre_Des, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.Imagen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Imagen, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @Html.EditorFor(model => model.Nombre_Ori, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })
    @Html.EditorFor(model => model.Nombre_Des, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })
    @*@Html.EditorFor(model => model.Imagen, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })*@
    <div class="form-group">
        @*<div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>*@
        <table class="table table-responsive-sm table-dark table-success">
            <thead>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <label for="file" class="btn btn-success">
                            Cargar Archivo
                            <i class="material-icons icon">file_upload</i>
                            <input type="file" id="file" name="file" class="btn btn-success  boton_personalizado" style="display:none;" />
                        </label>

                        <label for="btn_guardar" class="btn btn-info">
                            <i class="material-icons icon">cloud_done</i> Guardar Archivo
                            <input type="submit" id="btn_guardar" name="Guardar" class="btn btn-success" style="display:none;" />
                        </label>

                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
}

<div>
    @Html.ActionLink("Página Anterior", "Index")
</div>
<script src="@Url.Content("~/Scripts/jquery-3.4.1.min.js")"></script>
<script type="text/javascript">

    /*(function ($) {
    })(jQuery)*/
    window.onload = () => {
        let CarpetaEncabezadoid = document.querySelector('#CarpetaEncabezadoid');
        getcarpetas();
        //console.log('sdfsdf: ' + document.querySelector('#CarpetaEncabezadoid').options.length);
        //console.log(document.querySelector('#CarpetaEncabezadoid'));

        $("#AreaId").change(getcarpetas);

        function getcarpetas() {
            let list = '';
            $.getJSON('/Documento_Detalle/GetAreayEncabezadoCarpetaId', { idarea: $('#AreaId').val() }, function (data) {
                $.each(data, function () {
                    list += `<option value="${this.Value}">${this.Text}</option>`;
                });
                //console.log(data);
                $('#CarpetaEncabezadoid').html(list);
                //console.log(document.querySelector('#CarpetaEncabezadoid').options.length);
                if (document.querySelector('#CarpetaEncabezadoid').options.length > 0) {
                    setField();
                } else {
                    document.querySelector('#dynamicfields').innerHTML = '';
                }
            });
        }




        CarpetaEncabezadoid.addEventListener('change', setField);

        async function setField() {
            //console.log('inicio');
            document.querySelector('#dynamicfields').innerHTML = '';
            //console.log(CarpetaEncabezadoid.value);
            let json = await fileds(CarpetaEncabezadoid.value);
            let selects = JSON.parse(json.selects);
            //console.log(json);

            let options = JSON.parse(json.options);
            //console.log(options);
            console.log(selects)
            for (let i = 0; i < selects.length; i++) {
                let div = document.createElement('div');
                let label = document.createElement('label');
                label.innerText = selects[i].Descripcion;
                label.setAttribute('class', 'control-label');
                label.setAttribute('for', `dynamicselect${selects[i].Descripcion}`)
                div.setAttribute('class', 'form-group');
                let select = document.createElement('SELECT');
                select.setAttribute('id', `dynamicselect${selects[i].Descripcion}`);
                select.setAttribute('class', 'form-control');
                select.setAttribute('required', true);

                let defaultoption = document.createElement('option');
                defaultoption.setAttribute('value', '');
                defaultoption.setAttribute('selected', true);
                defaultoption.setAttribute('disabled', true);
                defaultoption.innerText = `Seleccionar ${selects[i].Descripcion}`;
                select.appendChild(defaultoption);
                div.appendChild(label);
                div.appendChild(select);
                document.querySelector('#dynamicfields').appendChild(div);
                for (var x = 0; x < options.length; x++) {
                    if (options[x].ConfCarpetaDetalleId === selects[i].ConfCarpetaDetalleId) {
                        let option = document.createElement('option');
                        option.setAttribute('value', options[x].Descripcion);
                        option.innerText = options[x].Descripcion;
                        select.appendChild(option);
                    }
                }
                select.addEventListener('change', setllaveunica);
            }
            let fecha = JSON.parse(json.fecha);
            //console.table(fecha);
            if (fecha != '' && fecha != undefined && fecha != null && fecha.Tipo != 0) {

                let div = document.createElement('div');
                let label = document.createElement('label');
                div.setAttribute('class', 'form-group');
                label.setAttribute('class', 'control-label');
                label.setAttribute('for', 'dateInput');
                label.innerText = fecha.Descripcion;
                let input = document.createElement('input');
                input.setAttribute('type', 'date');
                input.setAttribute('class', 'form-control');
                input.setAttribute('name', 'dateInput');
                input.setAttribute('id', 'dateInput');
                input.setAttribute('required', true);
                input.setAttribute('onkeydown', 'return false');  
                div.appendChild(label);
                div.appendChild(input);
                document.querySelector('#dynamicfields').appendChild(div);
                //fchtoday();
                input.addEventListener('change', setllaveunica);
            }
        }

        function setllaveunica() {
            let selects = document.querySelectorAll('#dynamicfields select');
            let fecha = document.querySelector('#dateInput');
            //console.log(fecha);
            let llaveunica = '';
            for (let i = 0; i < selects.length; i++) {
                llaveunica += selects[i].value + '-';
            }
            llaveunica = llaveunica.slice(0, -1);
            let slowdate = '';
            //fechas****************************************
            if (fecha != null && fecha.value != '') {
                //console.log('fecha.value=> '+fecha.value);
                slowdate = fecha.value.split("-");
                //console.log(slowdate);
                llaveunica = llaveunica + '-' + slowdate[0] + slowdate[1] + slowdate[2];
            }

            //**********************************************
            document.querySelector('#llaveUnica').value = llaveunica;
        }

        async function fileds(id) {
            const settings = {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json'
                }
            };
            let request = await fetch(`/Documento_Detalle/fields/${id}`, settings);
            let response = await request.json();
            return response;
        }
    }

    async function fchtoday() {
        let d = new Date();
        d.setMinutes(d.getMinutes() - d.getTimezoneOffset());
        d = d.toJSON().slice(0, 10);
        console.log(d);
        //document.querySelector('#dateInput').value = d;
    }

    $("#file").click(function () {
        var id = $("#Id").val();
        var CarpetaEncabezadoid = $('select[id=CarpetaEncabezadoid]').val();
        var AreaId = $('select[id=AreaId]').val();

        $.getJSON('/Documento_Detalle/GetFechaRegistro', { CarpetaEncabezadoid: CarpetaEncabezadoid, Id: id, AreaId: AreaId }, function (data) {
            $.each(data, function () {
                $("#FechaRegistro").val(this.Text);
            });
        });
    });

</script>
