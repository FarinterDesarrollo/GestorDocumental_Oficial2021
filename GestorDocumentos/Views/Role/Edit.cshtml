@model GestorDocumentos.Models.RoleViewModels

@{
    ViewBag.Title = "Edit";
}

<h2>Editar</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Roles Existentes</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, "Nombre del Rol", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", oninput = "InputToUpper(this);" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" id="Guardar" class="btn btn-warning" onclick="return validar()"/>
            </div>
        </div>
    </div>
}

    @section Scripts{
     
        <script type="text/javascript">
            //$("#Name").keypress(function (key) {
            //window.console.log(key.charCode)
            //if ((key.charCode < 97 || key.charCode > 122)//letras mayusculas
            //&& (key.charCode < 65 || key.charCode > 90) //letras minusculas
            ////&& (key.charCode != 45) //retroceso
            //&& (key.charCode != 241) //ñ
            //&& (key.charCode != 209) //Ñ
            //&& (key.charCode != 32) //espacio
            //&& (key.charCode != 225) //á
            //&& (key.charCode != 233) //é
            //&& (key.charCode != 237) //í
            //&& (key.charCode != 243) //ó
            //&& (key.charCode != 250) //ú
            //&& (key.charCode != 193) //Á
            //&& (key.charCode != 201) //É
            //&& (key.charCode != 205) //Í
            //&& (key.charCode != 211) //Ó
            //&& (key.charCode != 218) //Ú

            // )
            //  return false;
            //});

            $("#Name").bind('keyup', function () {
                var nombre = $("#Name").val();

                $.getJSON('/Role/AvisoRolExistente', { nombre: $("#Name").val() }, function (data) {
                    $.each(data, function () {
                        if (this.Text != '') {
                            alert("El rol ya existe, favor intente con otro nombre.");
                        }
                    });
                });
            });

            //function validar() {
            //    var nombre = $("#Name").val();

            //    $.getJSON('/Role/AvisoRolExistente', { nombre: $("#Name").val() }, function (data) {
            //        $.each(data, function () {
            //            if (this.Text != '') {
            //                alert("El rol ya existe, favor intente con otro nombre.");
            //            }
            //        });
            //    });
            //}

            $('#Name').bind('keypress', function (event) {
                var regex = new RegExp("^[a-zA-Z0-9- ]+$");
                var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
                if (!regex.test(key)) {
                    event.preventDefault();
                    return false;
                }
            });

        </script>
    
    }
    

    <div>
        @Html.ActionLink("Página Anterior", "Index")
    </div>
