@model GestorDocumentos.Models.ConfCarpetaDetalle

@{
    ViewBag.Title = "Editar";
}

<h2>Editar</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h5>Configuración Carpeta Detalle</h5>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.AreaId, "Área", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("AreaId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AreaId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CarpetaEncabezadoid, "Nombre de Carpeta", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CarpetaEncabezadoid", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CarpetaEncabezadoid, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NivelId, "Nivel", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NivelId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NivelId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descripcion, "Descripción", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control", oninput = "InputToUpper(this);" } })
            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Tipo_campoId, "Tipo de Campo", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Tipo_campoId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Tipo_campoId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Longitud, "Longitud", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Longitud, new { htmlAttributes = new { @class = "form-control" , min="1"} })
            @Html.ValidationMessageFor(model => model.Longitud, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-warning" />
        </div>
    </div>
</div>
}

@section Scripts
{
    <script src="@Url.Content("~/Scripts/jquery-3.4.1.min.js")"></script>
    <script type="text/javascript">

        //******************************** Validaciones tipo de campo

        $("#Tipo_campoId").change(function () {
            var id = $('select[id=Tipo_campoId]').val();
            $('#Longitud').empty();

            $.getJSON('/ConfCarpetaDetalles/TraerTipoCampoDescripcion', { id: $('#Tipo_campoId').val() }, function (data) {
                $.each(data, function (i, field) {
                    var longitud = parseInt(field.Text);

                    var tipo = $("#Tipo_campoId option:selected").text();

                    switch (tipo) {
                        case "Fecha":
                            $('#Longitud').val(longitud);
                            $('#Longitud').attr({ "readonly": "readonly" });
                            break;
                        case "Fecha y Hora":
                            $('#Longitud').val(longitud);
                            $('#Longitud').attr({ "readonly": "readonly" });
                            break;
                        case "Carácter":
                            //$('#Longitud').val(longitud - 4);
                            $('#Longitud').removeAttr("readonly", "readonly");
                            $('#Longitud').attr({ "max": field.Text, "min": 1 });
                            break;
                        case "Numérico":
                            $('#Longitud').val(longitud - 9);
                            $('#Longitud').removeAttr("readonly", "readonly");
                            $('#Longitud').attr({ "max": field.Text, "min": 1 });
                            break;
                    }
                });
            });
        });

        $('#Descripcion').bind('keypress', function (event) {
            var regex = new RegExp("^[a-zA-Z0-9- ]+$");
            var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
            if (!regex.test(key)) {
                event.preventDefault();
                return false;
            }
        });

        function mostrarnivel() {

            $.getJSON('/ConfCarpetaDetalles/GetMostrarNivelesEnEditar', { id1: $('#AreaId').val(), id2: $('#CarpetaEncabezadoid').val(), descripcion: $("#Descripcion").val() }, function (data) {
                $.each(data, function (i, field) {
                    var nivel = parseInt(field.Text);
                    //$('#NivelId').attr({ "placeholder": maximo + 1 });
                    $('#NivelId').val(nivel);
                });
            });
        }

        //function MostrarEncabezados_SegunArea() {
        //    $('#CarpetaEncabezadoid').empty();
        //    $.getJSON('/ConfCarpetaDetalles/GetAreayEncabezadoCarpetaId', { idarea: $('#AreaId').val() }, function (data) {
        //        $.each(data, function () {
        //            $('#CarpetaEncabezadoid').append('<option value=' +
        //                this.Value + '>' + this.Text + '</option>');
        //        });
        //    });
        //}

        $(Document).ready(function () {
            mostrarnivel();
            $("#AreaId").attr({ 'disabled': true });
            $("#CarpetaEncabezadoid").attr({ 'disabled': true });
        });

        //$("#AreaId").change(function () {
        //    //MostrarEncabezados_SegunArea();
        //    mostrarnivel();
        //});

        //$("#CarpetaEncabezadoid").change(function () {
        //    mostrarnivel();
        //});

        //***************************************************************************

        //******************************** Validaciones tipo de Niveles
        $(document).ready(function () {
            $('#NivelId').attr({ "readonly": "readonly" });
        });
    </script>
}

<div>
    @Html.ActionLink("Página Anterior", "Index")
</div>
